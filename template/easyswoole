#!/usr/bin/env php
<?php

use EasySwoole\EasySwoole\Command\CommandRunner;

defined('IN_PHAR') or define('IN_PHAR', boolval(\Phar::running(false)));
defined('RUNNING_ROOT') or define('RUNNING_ROOT', realpath(getcwd()));
defined('EASYSWOOLE_ROOT') or define('EASYSWOOLE_ROOT', IN_PHAR ? \Phar::running() : realpath(getcwd()));
defined('STORAGE_ROOT') or define('STORAGE_ROOT', \WecarSwoole\Util\File::join(EASYSWOOLE_ROOT, 'storage'));
defined('CONFIG_ROOT') or define('CONFIG_ROOT', \WecarSwoole\Util\File::join(EASYSWOOLE_ROOT, 'config'));

$file = EASYSWOOLE_ROOT.'/vendor/autoload.php';
if (file_exists($file)) {
    require $file;
}else{
    die("include composer autoload.php fail\n");
}

include_once EASYSWOOLE_ROOT . '/constant.php';

$args = $argv;
array_shift($args);

// 环境常量定义
if (!defined('ENVIRON')) {
    $env = 'dev';
    foreach ($args as $param) {
        if (strpos($param, '--env') !== false) {
            $env = trim(explode('=', $param)[1]);
            break;
        }
    }

    $serverEnv = 'dev';
    switch ($env) {
        case 'test':
            define('ENVIRON', 'test');
            break;
        case 'preview':
            define('ENVIRON', 'preview');
            break;
        case 'produce':
            $serverEnv = 'produce';
            define('ENVIRON', 'produce');
            break;
        default:
            define('ENVIRON', 'dev');
            break;
    }

    $args[] = $serverEnv;
}

if (in_array('-d', $args)) {
    $args[] = 'd';
}

// 是否调试模式
!defined('DEBUG_MODEL') && define('DEBUG_MODEL', !in_array('d', $args) && in_array('--debug', $args));

$ret = CommandRunner::getInstance()->run($args);
if(!empty($ret)){
    echo $ret."\n";
}